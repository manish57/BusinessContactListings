{"version":3,"sources":["C:/Users/manis/Downloads/Projects/Angular-Projects/business-contacts-listings/src async","C:/Users/manis/Downloads/Projects/Angular-Projects/business-contacts-listings/src/app/app.component.css","C:/Users/manis/Downloads/Projects/Angular-Projects/business-contacts-listings/src/app/app.component.html","C:/Users/manis/Downloads/Projects/Angular-Projects/business-contacts-listings/src/app/app.component.ts","C:/Users/manis/Downloads/Projects/Angular-Projects/business-contacts-listings/src/app/app.module.ts","C:/Users/manis/Downloads/Projects/Angular-Projects/business-contacts-listings/src/app/services/firebase.service.ts","C:/Users/manis/Downloads/Projects/Angular-Projects/business-contacts-listings/src/environments/environment.ts","C:/Users/manis/Downloads/Projects/Angular-Projects/business-contacts-listings/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = \"../../../../../src async recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/manis/Downloads/Projects/Angular-Projects/business-contacts-listings/src async\n// module id = ../../../../../src async recursive\n// module chunks = 1","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".row {\\r\\n    margin-left: 20px;\\r\\n    margin-right: 20px;\\r\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/manis/Downloads/Projects/Angular-Projects/business-contacts-listings/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = 1","module.exports = \"<div class=\\\"top-bar\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"top-bar-left\\\">\\n      <ul class=\\\"menu\\\">\\n        <li class=\\\"menu-text\\\">BusinessContacts</li>  \\n      </ul>  \\n    </div> \\n    <div class=\\\"top-bar-right\\\">\\n      \\n    </div> \\n  </div>  \\n</div>\\n<br>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"large-6 columns\\\">\\n    <button (click)=\\\"changeState('add')\\\" class=\\\"button\\\">Add Business</button>\\n  </div>  \\n  <div class=\\\"large-6 columns\\\">\\n    <label> Filter Category\\n        <select (change)=\\\"filterCategory(filteredCategory.value)\\\" #filteredCategory>\\n            <option value=\\\"0\\\">Select</option>\\n            <option *ngFor=\\\"let category of categories\\\" value=\\\"{{category.name}}\\\">{{category.name}}</option>\\n        </select>\\n    </label>\\n  </div>  \\n</div>\\n\\n<!-- ADD FORM -->\\n<div *ngIf=\\\"appState == 'add'\\\" class=\\\"row\\\">\\n  <div class=\\\"large-12 columns\\\">\\n    <h3>Add Business</h3>\\n    <form (submit)=\\\"addBusiness(\\n        company.value,\\n        category.value,\\n        years_in_business.value, \\n        description.value,\\n        phone.value,\\n        email.value,\\n        street_address.value,\\n        city.value,\\n        state.value,\\n        zipcode.value)\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"large-6 columns\\\">\\n            <label> Company\\n              <input type=\\\"text\\\" placeholder=\\\"Company Name\\\" #company>\\n            </label>\\n          </div>  \\n          <div class=\\\"large-6 columns\\\">\\n            <label>Category\\n              <select #category>\\n                <option value=\\\"0\\\">Select</option>\\n                <option *ngFor=\\\"let category of categories\\\" value=\\\"{{category.name}}\\\">{{category.name}}</option>\\n              </select> \\n             </label>\\n          </div>  \\n        </div>\\n        \\n        <div class=\\\"row\\\">\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>Years In Business\\n              <input type=\\\"text\\\" placeholder=\\\"Years In Business\\\" #years_in_business>\\n            </label>\\n          </div>\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>Description\\n               <textarea #description></textarea>\\n            </label>\\n          </div>\\n        </div>\\n        \\n        <div class=\\\"row\\\">\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>Phone\\n              <input type=\\\"text\\\" placeholder=\\\"Phone\\\" #phone>\\n            </label>\\n          </div>\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>Email\\n              <input type=\\\"text\\\" placeholder=\\\"Email\\\" #email>\\n            </label>\\n          </div>\\n        </div>\\n        \\n        <div class=\\\"row\\\">\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>Street Address\\n              <input type=\\\"text\\\" placeholder=\\\"Street Address\\\" #street_address>\\n            </label>\\n          </div>\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>City\\n              <input type=\\\"text\\\" placeholder=\\\"City\\\" #city>\\n            </label>\\n          </div>\\n        </div>\\n        \\n        <div class=\\\"row\\\">\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>State\\n              <input type=\\\"text\\\" placeholder=\\\"State\\\" #state>\\n            </label>\\n          </div>\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>Zipcode\\n              <input type=\\\"text\\\" placeholder=\\\"Zipcode\\\" #zipcode>\\n            </label>\\n          </div>\\n        </div>\\n        \\n        <div class=\\\"row\\\">\\n          <div class=\\\"large-12\\\">\\n            <input type=\\\"submit\\\" class=\\\"button\\\" value=\\\"Submit\\\">  \\n          </div>  \\n        </div>\\n        \\n    </form>  \\n  </div> \\n</div>\\n\\n\\n<!-- EDIT FORM -->\\n<div *ngIf=\\\"appState == 'edit'\\\" class=\\\"row\\\">\\n  <div class=\\\"large-12 columns\\\">\\n    <h3>Edit Business</h3>\\n    <form (submit)=\\\"updateBusiness()\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"large-6 columns\\\">\\n            <label> Company\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"activeCompany\\\" name=\\\"activeCompany\\\" placeholder=\\\"Company Name\\\">\\n            </label>\\n          </div>  \\n          <div class=\\\"large-6 columns\\\">\\n            <label>Category\\n              <select [(ngModel)]=\\\"activeCategory\\\" name=\\\"activeCategory\\\">\\n                <option value=\\\"0\\\">Select</option>\\n                <option *ngFor=\\\"let category of categories\\\" value=\\\"{{category.name}}\\\">{{category.name}}</option>\\n              </select> \\n             </label>\\n          </div>  \\n        </div>\\n        \\n        <div class=\\\"row\\\">\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>Years In Business\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"activeYearsInBusiness\\\" name=\\\"activeYearsInBusiness\\\" placeholder=\\\"Years In Business\\\">\\n            </label>\\n          </div>\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>Description\\n               <textarea [(ngModel)]=\\\"activeDescription\\\" name=\\\"activeDescription\\\"></textarea>\\n            </label>\\n          </div>\\n        </div>\\n        \\n        <div class=\\\"row\\\">\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>Phone\\n              <input type=\\\"text\\\" placeholder=\\\"Phone\\\" [(ngModel)]=\\\"activePhone\\\" name=\\\"activePhone\\\">\\n            </label>\\n          </div>\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>Email\\n              <input type=\\\"text\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"activeEmail\\\" name=\\\"activeEmail\\\">\\n            </label>\\n          </div>\\n        </div>\\n        \\n        <div class=\\\"row\\\">\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>Street Address\\n              <input type=\\\"text\\\" placeholder=\\\"Street Address\\\" [(ngModel)]=\\\"activeStreetAddress\\\" name=\\\"activeStreetAddress\\\">\\n            </label>\\n          </div>\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>City\\n              <input type=\\\"text\\\" placeholder=\\\"City\\\" [(ngModel)]=\\\"activeCity\\\" name=\\\"activeCity\\\">\\n            </label>\\n          </div>\\n        </div>\\n        \\n        <div class=\\\"row\\\">\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>State\\n              <input type=\\\"text\\\" placeholder=\\\"State\\\" [(ngModel)]=\\\"activeState\\\" name=\\\"activeState\\\">\\n            </label>\\n          </div>\\n          <div class=\\\"medium-6 columns\\\">\\n            <label>Zipcode\\n              <input type=\\\"text\\\" placeholder=\\\"Zipcode\\\" [(ngModel)]=\\\"activeZipcode\\\" name=\\\"activeZipcode\\\">\\n            </label>\\n          </div>\\n        </div>\\n        \\n        <div class=\\\"row\\\">\\n          <div class=\\\"large-12\\\">\\n            <input type=\\\"submit\\\" class=\\\"button\\\" value=\\\"Submit\\\">  \\n          </div>  \\n        </div>\\n        \\n    </form>  \\n  </div> \\n</div>\\n\\n<div *ngIf=\\\"appState == 'extend'\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"large-12 columns\\\">\\n      <button (click)=\\\"changeState('default')\\\" class=\\\"button alert\\\">Go Back</button>\\n    </div>  \\n  </div>  \\n\\n\\n<div *ngFor=\\\"let business of businesses\\\">\\n  <div *ngIf=\\\"business.$key == activeKey\\\">\\n     <div class=\\\"row\\\">\\n      <div class=\\\"large-5 columns large-offset-1\\\">\\n          <h3>{{business.company}}</h3>\\n          <p>Category: {{business.category}}</p>\\n          <p>Years In Business: {{business.years_in_business}}\\n          <p>{{business.description}}</p>\\n      </div>  \\n      <div class=\\\"large-5 columns large-offset-1\\\">\\n          <h4>Contact Info</h4>\\n          <ul>\\n            <li>Phone: {{business.phone}}</li>  \\n            <li>Email: {{business.email}}</li>  \\n            <li>Street: {{business.street_address}}</li>  \\n            <li>City: {{business.city}}</li>  \\n            <li>State: {{business.state}}</li>  \\n            <li>Zipcode: {{business.zipcode}}</li>  \\n          </ul>\\n      </div>  \\n     </div>\\n  </div>\\n</div>\\n</div>\\n\\n<div class=\\\"row\\\">\\n  <div class=\\\"large-12 columns\\\">\\n    <div *ngIf=\\\"businesses\\\">\\n      <table>\\n        <thead>\\n          <tr>\\n            <th>Company</th>\\n            <th>Category</th>\\n            <th>Phone</th>\\n            <th></th>  \\n          </tr>  \\n        </thead>  \\n        <tbody>\\n          <tr *ngFor=\\\"let business of businesses\\\">\\n            <td>{{business.company}}</td>  \\n            <td>{{business.category}}</td>  \\n            <td>{{business.phone}}</td>  \\n            <td>\\n              <button (click)=\\\"changeState('extend', business.$key)\\\" class=\\\"button\\\">More</button> \\n              <button (click)=\\\"showEdit(business)\\\" class=\\\"button secondary\\\">Edit</button>\\n              <button (click)=\\\"deleteBusiness(business.$key)\\\" class=\\\"button alert\\\">Delete</button>\\n             </td>  \\n          </tr>  \\n        </tbody>\\n      </table>  \\n    </div>  \\n  </div>  \\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Users/manis/Downloads/Projects/Angular-Projects/business-contacts-listings/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = 1","import { Component, OnInit } from '@angular/core';\nimport {FirebaseService} from './services/firebase.service';\nimport {Business} from './Business';\nimport {Category} from './Category';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n   businesses: Business[];\n   categories: Category[];\n   appState: string;\n   activeKey: string;\n\n    activeCompany:string;\n    activeCategory:string;\n    activeYearsInBusiness:string;\n    activeDescription:string;\n    activePhone:string;\n    activeEmail:string;\n    activeStreetAddress:string;\n    activeCity:string;\n    activeState:string;\n    activeZipcode:string;\n  \n\n   constructor(private _fs: FirebaseService) {\n   }\n\n   ngOnInit() {\n     this._fs.getBusinesses().subscribe(businesses => {\n        this.businesses = businesses;\n     });\n\n    this._fs.getCategories().subscribe(categories => {\n        this.categories = categories;\n     });\n   }\n\n   changeState(state, key) {\n     if(key) {\n        this.activeKey = key;\n     }\n     this.appState = state;\n   }\n\n   filterCategory(category) {\n     this._fs.getBusinesses(category).subscribe(businesses => {\n        this.businesses = businesses;\n     });\n   }\n\n  addBusiness(\n    company:string,\n    category:string, \n    years_in_business:number,\n    description:string,\n    phone:string,\n    email:string,\n    street_address:string,\n    city:string,\n    state:string,\n    zipcode:string){\n      var created_at = new Date().toString();\n      \n      var newBusiness = {\n        company: company,\n        category: category,\n        years_in_business:years_in_business,\n        description:description,\n        phone:phone,\n        email:email,\n        street_address: street_address,\n        city: city,\n        state: state,\n        zipcode: zipcode,\n        created_at:created_at\n      }\n      \n      //console.log(newBusiness);\n      \n      this._fs.addBusiness(newBusiness);\n      \n      this.changeState('default', ' ');\n  }\n  \n    showEdit(business){\n      this.changeState('edit', business.$key);\n      this.activeCompany =          business.company;\n      this.activeCategory =         business.category;\n      this.activeYearsInBusiness =  business.years_in_business;\n      this.activeDescription =      business.description;\n      this.activePhone =            business.phone;\n      this.activeEmail =            business.email;\n      this.activeStreetAddress =    business.street_address;\n      this.activeCity =             business.city;\n      this.activeState =            business.state;\n      this.activeZipcode =          business.zipcode;\n    }\n    \n    updateBusiness(){\n        var updBusiness = {\n        company:this.activeCompany,\n        category:this.activeCategory,\n        years_in_business:this.activeYearsInBusiness,\n        description:this.activeDescription,\n        phone:this.activePhone,\n        email:this.activeEmail,\n        street_address: this.activeStreetAddress,\n        city: this.activeCity,\n        state: this.activeState,\n        zipcode: this.activeZipcode\n      }\n      \n      this._fs.updateBusiness(this.activeKey, updBusiness);\n      \n      this.changeState('default', ' ');\n    }\n    \n    deleteBusiness(key){\n      this._fs.deleteBusiness(key);\n      \n      this.changeState('default', ' ');\n    }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/manis/Downloads/Projects/Angular-Projects/business-contacts-listings/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\nimport { AngularFireModule } from 'angularfire2';\nimport { environment } from '../environments/environment';\n\nimport { AppComponent } from './app.component';\n\nimport {FirebaseService} from './services/firebase.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule,\n    AngularFireModule.initializeApp(environment.firebase)\n  ],\n  providers: [FirebaseService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/manis/Downloads/Projects/Angular-Projects/business-contacts-listings/src/app/app.module.ts","import {Injectable} from '@angular/core';\r\nimport { AngularFire, FirebaseListObservable } from 'angularfire2';\r\nimport 'rxjs/add/operator/map';\r\nimport {Business} from '../Business';\r\nimport {Category} from '../Category';\r\n\r\n@Injectable()\r\n\r\nexport class FirebaseService {\r\n    businesses: FirebaseListObservable<Business[]>;\r\n    categories: FirebaseListObservable<Category[]>;\r\n\r\n    constructor(private _af:AngularFire) {\r\n    \r\n    }\r\n\r\n    getBusinesses(category:string = null) {\r\n\r\n        if(category != null) {\r\n\r\n        this.businesses = this._af.database.list('/businesses', {\r\n            query: {\r\n                orderByChild: 'category',\r\n                equalTo: category\r\n            }\r\n        }) as FirebaseListObservable<Business[]>\r\n        } else {\r\n                    this.businesses = this._af.database.list('/businesses') as\r\n                    FirebaseListObservable<Business[]>\r\n        }\r\n\r\n        return this.businesses;\r\n    }\r\n\r\n    getCategories() {\r\n        this.categories = this._af.database.list('/categories') as\r\n        FirebaseListObservable<Category[]>\r\n        return this.categories;\r\n    }\r\n\r\n    addBusiness(newBusiness){\r\n        return this.businesses.push(newBusiness);\r\n    }\r\n    \r\n    updateBusiness(key, updBusiness){\r\n        return this.businesses.update(key, updBusiness);\r\n    }\r\n    \r\n    deleteBusiness(key){\r\n        return this.businesses.remove(key);\r\n    }\r\n\r\n}\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/manis/Downloads/Projects/Angular-Projects/business-contacts-listings/src/app/services/firebase.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: 'AIzaSyA9ZcB9cZi82KdlF5jNK6iaPNetPJElphI',\n    authDomain: 'albumz-86d4b.firebaseapp.com',\n    databaseURL: 'https://albumz-86d4b.firebaseio.com',\n    projectId: 'albumz-86d4b',\n    storageBucket: 'albumz-86d4b.appspot.com',\n    messagingSenderId: '772203343088'\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/manis/Downloads/Projects/Angular-Projects/business-contacts-listings/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// C:/Users/manis/Downloads/Projects/Angular-Projects/business-contacts-listings/src/main.ts"],"sourceRoot":"webpack:///"}